# version: '3.9'

# services:
#   myapp:
#     image: myapp:latest
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "80:80"
#       - "443:443"
#     depends_on:
#       - database

#   database:
#     image: postgres:latest
#     environment:
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_DB: mydatabase
#     volumes:
#       - db_data:/var/lib/postgresql/data

# volumes:
#   db_data:

version: '3.8'
services:
  myapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production



#  version: '3.8'
#  services:
#    myapp:
#      image: preprodacr.azurecr.io/webbApp:latest
# # version: '3'
# # services:
# #   azure-vote-back:
# #     image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
# #     container_name: azure-vote-back
# #     environment:
# #       ALLOW_EMPTY_PASSWORD: "yes"
# #     ports:
# #         - "6379:6379"

# #   azure-vote-front:
# #     build: ./azure-vote
# #     image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
# #     container_name: azure-vote-front
# #     environment:
# #       REDIS: azure-vote-back
# #     ports:
# #         - "8080:80"
# # services:
# #   myapp:
# #     image: WebApp
# #     ports:
# #       - "80:80"
# #       - "443:443"  
# #     environment:
# #       - ASPNETCORE_ENVIRONMENT=Production

#      # environment:
#      #   ALLOW_EMPTY_PASSWORD: "yes"
#       # ports:
#       #     -"6379:6379"
# #     secrets:
# #   acr_credentials:
# #     external: true

# # secrets:
# #   acr_login_server:
# #     external: true
